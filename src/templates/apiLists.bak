/* eslint-disable react/destructuring-assignment */
import React from 'react'
import { Helmet } from 'react-helmet'
import { graphql, Link } from 'gatsby'
import Layout from '../layout'
import ApiListing from '../components/Molecule/ApiListing/ApiListing'
import SEO from '../components/SEO/SEO'
import config from '../../data/SiteConfig'
import './listing.css'

class ApiListings extends React.Component {
  renderPaging() {
    const { currentPageNum, pageCount } = this.props.pageContext
    const prevPage = currentPageNum - 1 === 1 ? '/' : `/${currentPageNum - 1}/`
    const nextPage = `/${currentPageNum + 1}/`
    const isFirstPage = currentPageNum === 1
    const isLastPage = currentPageNum === pageCount

    return (
      <div className="paging-container">
        {!isFirstPage && <Link to={prevPage}>Previous</Link>}
        {[...Array(pageCount)].map((_val, index) => {
          const pageNum = index + 1
          return (
            <Link
              key={`listing-page-${pageNum}`}
              to={pageNum === 1 ? '/' : `/${pageNum}/`}
            >
              {pageNum}
            </Link>
          )
        })}
        {!isLastPage && <Link to={nextPage}>Next</Link>}
      </div>
    )
  }

  render() {
    const postEdges = this.props.data.allInternalPosts.edges

    return (
      <Layout location={this.props.location}>
        <div className="listing-container">
          <div className="posts-container">
            <Helmet title={config.siteTitle} />
            <SEO />
            <ApiListing postEdges={postEdges} />
          </div>
          {this.renderPaging()}
        </div>
      </Layout>
    )
  }
}

export default ApiListings

/* eslint no-undef: "off" */
export const ApilistingQuery = graphql`
  query ApiListingQuery($skip: Int!, $limit: Int!) {
    allInternalPosts(limit: $limit, skip: $skip) {
      edges {
        node {
          id
          body
          title
          userId
        }
      }
    }
  }
`
